#!/usr/bin/env bash

#PBS -l nodes=1:ppn=8
#PBS -l walltime=02:30:00
#PBS -l mem=8gb

# Load the necessary modules
module load Trimmomatic/0.39-Java-11
module load MultiQC/1.9-intel-2020a-Python-3.8.2
module load FastQC/0.11.9-Java-11
module load parallel-fastq-dump/0.6.6-GCCcore-9.3.0-SRA-Toolkit-3.0.0-Python-3.8.2
module load STAR/2.7.4a-GCC-9.3.0
module load Subread/2.0.3-GCC-9.3.0
module load TopHat/2.1.2-gompi-2020a

# Change to the directory you are working in 
cd /user/gent/439/vsc43966/Prac_3_AHTA

# Create index STAR
mkdir TAIR
STAR --runThreadN 16 --runMode genomeGenerate --genomeDir TAIR --genomeSAindexNbases 12 --genomeFastaFiles Arabidopsis_thaliana.TAIR10.dna.toplevel.fa --sjdbGTFfile Arabidopsis_thaliana.TAIR10.37.gtf

# Make a directory to store STAR logs
mkdir STAR_logs

# For loop over all samples
for ID in SRR401413 SRR401414 SRR401415 SRR401422 SRR401423 SRR401424
# This for loop will loop over the variables after "in" each time attributing the value SRRXXX as to $ID
do 
	# Echo the ID you are processing
	echo $ID
	
	# Load the first (-X 500000) 500,000 reads for the ID (--sra-id $ID) you are processing using 8 cores (--threads 8)
	parallel-fastq-dump --sra-id $ID --threads 8 -X 500000
	
	# Perform trimming based on the quality score (-phred33) with a sliding window (SLIDINGWINDOW:4:15) using 8 cores (-threads 8)
	# storing the results in $ID\_trimQuality.fastq
	java -jar $EBROOTTRIMMOMATIC/trimmomatic-0.39.jar SE -threads 8 -phred33 $ID.fastq $ID\_trimQuality.fastq SLIDINGWINDOW:4:15
	java -jar $EBROOTTRIMMOMATIC/trimmomatic-0.39.jar SE -threads 8 -phred33 $ID\_trimQuality.fastq $ID\_trimBoth.fastq ILLUMINACLIP:Adapters.fa:2:30:10
	java -jar $EBROOTTRIMMOMATIC/trimmomatic-0.39.jar SE -threads 8 -phred33 $ID.fastq $ID\_trimAdapters.fastq ILLUMINACLIP:Adapters.fa:2:30:10
	
	# Perform QC with fastqc on the trimmed reads outputting everything in the fastqc folder (--outdir fastqc)
	fastqc --outdir fastqc $ID\_trimQuality.fastq
	fastqc --outdir fastqc $ID\_trimBoth.fastq
	
	# Make directory to output alignment results
	mkdir $ID\_quant
	
	# Alignment using STAR
	STAR --runThreadN 8 --outFileNamePrefix $ID\_ --genomeDir TAIR --readFilesIn $ID\_trimBoth.fastq
	STAR --runThreadN 8 --outFileNamePrefix $ID\_Raw_ --genomeDir TAIR --readFilesIn $ID.fastq
	STAR --runThreadN 8 --outFileNamePrefix $ID\_trimAdapters_ --genomeDir TAIR --readFilesIn $ID\_trimAdapters.fastq
	STAR --runThreadN 8 --outFileNamePrefix $ID\_trimQuality_ --genomeDir TAIR --readFilesIn $ID\_trimQuality.fastq
	
	# Summarization to counts for STAR (only trimBoth output)
	featureCounts -T 8 -g gene_id -a Arabidopsis_thaliana.TAIR10.37.gtf -o $ID\_featcount.txt $ID\_Aligned.out.sam
	
	# Move star log files
	mv $ID\_Log.final.out STAR_logs/$ID\_Log.final.out
	mv $ID\_Raw_Log.final.out STAR_logs/$ID\_Raw_Log.final.out
	mv $ID\_trimAdapters_Log.final.out STAR_logs/$ID\_trimQuality_Log.final.out
	mv $ID\_trimQuality_Log.final.out STAR_logs/$ID\_trimQuality_Log.final.out
	
	# Remove fastq files to reduce disk usage
	rm $ID.fastq
	rm $ID\_trimAdapters.fastq
	rm $ID\_trimQuality.fastq
	rm $ID\_trimBoth.fastq
done

# Make directory to output all alignment
mkdir STAR_quant 
# Put all STAR output files in one directory (easier for downloading and downstream processing with Rstudio!)
for ID in SRR401413 SRR401414 SRR401415 SRR401422 SRR401423 SRR401424
do
	mv $ID\_featcount.txt STAR_quant/$ID\_featcount.txt
	mv $ID\_Aligned.out.sam STAR_quant/$ID\_Aligned.out.sam
	rm $ID\_Raw_Aligned.out.sam
	rm $ID\_trimQuality_Aligned.out.sam
	rm $ID\_trimAdapters_Aligned.out.sam
	
	rm -r $ID\_quant__STARtmp
	rm -r $ID\_quant_Raw__STARtmp
	rm -r $ID\_quant_trimAdapters__STARtmp
	rm -r $ID\_quant_trimQuality__STARtmp
	
	rm $ID\_Log*
	rm $ID\_Raw_Log*
	rm $ID\_trimQuality_Log*
	rm $ID\_trimAdapters_Log*
	
	rm $ID\_SJ*
	rm $ID\_Raw_SJ*
	rm $ID\_trimQuality_SJ*
	rm $ID\_trimAdapters_SJ*
done

# Use multiqc to make an overview of all quality control and log files performed 
# ("." option searches all files and subdirectories of the current working directory)
multiqc .

