#!/usr/bin/env bash

#PBS -l nodes=1:ppn=8
#PBS -l walltime=06:00:00
#PBS -l mem=16gb

# "# command" was used as a placeholder where a line of code should be inserted

# specific arguments were taken from the original paper (https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3241659/)
# -> section ChIP-seq data analysis

# Load the necessary modules
module load MACS2/2.2.7.1-foss-2021b
module load Bowtie2/2.4.4-GCC-11.2.0
module load SAMtools/1.15-GCC-11.2.0
#module load parallel-fastq-dump
#module load FastQC/0.11.9-Java-11
module load SRA-Toolkit

CONTROL="SRR111951" # there is 1 other IgG sample that can be used as control -> check later
SAMPLES="SRR111953 SRR111954 SRR111955 SRR111956 SRR111957"

# Change to the directory you are working in 
cd $VSC_DATA_VO/Courses/AHTA/Group11/ChIPseq
mkdir macs2

echo "downloading sample & control fastq"

for sample in $CONTROL $SAMPLES
do
    echo "fetching $sample" 
    prefetch $sample
    [ -f "$sample.fastq" ] || fasterq-dump --concatenate-reads $sample
done

# aligning with bowtie
# Aligning
for sample in $CONTROL $SAMPLES
do
    echo "aligning $sample"
    [ -f "$sample.sam" ] || bowtie2 -p 8 -x Homo_sapiens -U $sample.fastq -S $sample.sam \
				    --very-sensitive
				     
done

echo "converting to bam..."
# Conversion to bam
# TODO: just save everything as bam when downloading!
for sample in $CONTROL $SAMPLES
do
    echo "converting $sample"
    [ -f $sample.bam ] || samtools view -S -b $sample.sam > $sample.bam
done

echo "converted to bam!"

# TODO: should we use "broadpeak" option or not? -> look up online
# -> need narrow peaks (transcriptor factor bindings); broad peaks is used for broad regulation factors like histone modifications
# resource: https://hbctraining.github.io/Intro-to-ChIPseq/lessons/05_peak_calling_macs.html
# TODO -> has some remarks about how you should handle duplicates

# Run MACS2 (TODO modify this command)
# -g hs: (homo-sapiens mappable region?) -> TODO look up

echo "calling peaks..."
for sample in $SAMPLES
do
    echo "calling peaks for $sample"
    macs2 callpeak -f BAM -t $sample.bam -c $CONTROL.bam -n $sample -g hs --outdir macs2
done

echo "all done :)"
