#!/usr/bin/env bash

#PBS -l nodes=1:ppn=8
#PBS -l walltime=00:30:00
#PBS -l mem=2gb

# "# command" was used as a placeholder where a line of code should be inserted

# Load the necessary modules
module load FastQC/0.11.9-Java-11
module load parallel-fastq-dump/0.6.6-GCCcore-9.3.0-SRA-Toolkit-3.0.0-Python-3.8.2

# Change to the directory you are working in 
cd $HOME/

# Make a directory to store fastqc output
mkdir fastqc
mkdir multiqc

# For loop over all samples
for ID in SRR2042580 SRR2042581 SRR2042582 SRR2042583 SRR2042584 SRR2042585 SRR2042586 SRR2042587 SRR2042588 SRR2042589 SRR2042590 SRR2042591 SRR2042592 SRR2042593 SRR2042594 SRR2042595 SRR2042596 SRR2042597
# This for loop will loop over the variables after "in" each time attributing the value SRRXXX as to $ID
do 
	# Echo the ID you are processing
	echo $ID
	
	# Load the first (-X 500000) 500,000 reads for the ID (--sra-id $ID) you are processing using 8 cores (--threads 8)
	parallel-fastq-dump --sra-id $ID
	
	# Perform QC with fastqc on the raw reads outputting everything in the fastqc folder (--outdir fastqc)
	fastqc --outdir fastqc $ID.fastq
	
	
	
	# Remove fastq files to reduce disk usage
	rm $ID.fastq
done
